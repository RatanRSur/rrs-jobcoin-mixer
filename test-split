#!/bin/bash

set -e

echo "This script assumes a deposit address hardcoded as test-deposit"

small_random() {
    str=$(echo $RANDOM)
    maybe_zero="${str: -1}"
    echo $(($maybe_zero + 1))
}

number_of_accounts=$(small_random)

destination_accounts=$(shuf /usr/share/dict/words | rg -v "'" | head -$(small_random))
input=$(echo $destination_accounts | tr ' ' ',')

number_of_deposits=$(small_random)

(echo $input;
for i in $(seq $number_of_deposits); do
    sleep 5;
    curl -k -s http://jobcoin.gemini.com/phosphate/create -H 'Content-Type: application/json' -d "{\"address\": \"test-deposit\"}";
done;
sleep 20) | sbt run

for acc in $destination_accounts; do
    echo -n "$acc: "
    curl -k -s http://jobcoin.gemini.com/phosphate/api/addresses/$acc | jq .balance
done

echo "Emptying test deposit addr and pool..."
for acc in test-deposit test-pool; do
    echo -n "$acc: "
    balance=$(curl -k -s http://jobcoin.gemini.com/phosphate/api/addresses/$acc | jq .balance)
    transfer_body="{ \"fromAddress\": \"$acc\", \"toAddress\": \"void\", \"amount\" : $balance }"
    curl -k -s http://jobcoin.gemini.com/phosphate/api/transactions -H 'Content-Type: application/json' --data "$transfer_body" > /dev/null
    curl -k -s http://jobcoin.gemini.com/phosphate/api/addresses/$acc | jq .balance
done

